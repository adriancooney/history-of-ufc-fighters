apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"fluentd-gcp","kubernetes.io/cluster-service":"true","version":"v2.0.9"},"name":"fluentd-gcp-v2.0.9","namespace":"kube-system"},"spec":{"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"fluentd-gcp","kubernetes.io/cluster-service":"true","version":"v2.0.9"}},"spec":{"containers":[{"env":[{"name":"FLUENTD_ARGS","value":"--no-supervisor -q"}],"image":"gcr.io/google-containers/fluentd-gcp:2.0.9","livenessProbe":{"exec":{"command":["/bin/sh","-c","LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then\n  exit 1;\nfi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r \"s/Modify: (.*)/\\1/\"`; LAST_MODIFIED_TIMESTAMP=`date -d \"$LAST_MODIFIED_DATE\" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then\n  rm -rf /var/log/fluentd-buffers;\n  exit 1;\nfi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then\n  exit 1;\nfi;\n"]},"initialDelaySeconds":600,"periodSeconds":60},"name":"fluentd-gcp","resources":{"limits":{"memory":"300Mi"},"requests":{"cpu":"100m","memory":"200Mi"}},"volumeMounts":[{"mountPath":"/var/log","name":"varlog"},{"mountPath":"/var/lib/docker/containers","name":"varlibdockercontainers","readOnly":true},{"mountPath":"/host/lib","name":"libsystemddir","readOnly":true},{"mountPath":"/etc/fluent/config.d","name":"config-volume"}]},{"command":["/monitor","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google-containers/prometheus-to-sd:v0.2.2","name":"prometheus-to-sd-exporter"}],"dnsPolicy":"Default","nodeSelector":{"beta.kubernetes.io/fluentd-ds-ready":"true"},"serviceAccountName":"fluentd-gcp","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","key":"node.alpha.kubernetes.io/ismaster"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/log"},"name":"varlog"},{"hostPath":{"path":"/var/lib/docker/containers"},"name":"varlibdockercontainers"},{"hostPath":{"path":"/usr/lib64"},"name":"libsystemddir"},{"configMap":{"name":"fluentd-gcp-config-v1.2.2"},"name":"config-volume"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      version: v2.0.9
    name: fluentd-gcp-v2.0.9
    namespace: kube-system
    resourceVersion: "8875152"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/fluentd-gcp-v2.0.9
    uid: 474786fc-bdbc-11e7-a6d6-42010a8001ed
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: fluentd-gcp
        kubernetes.io/cluster-service: "true"
        version: v2.0.9
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: fluentd-gcp
          kubernetes.io/cluster-service: "true"
          version: v2.0.9
      spec:
        containers:
        - env:
          - name: FLUENTD_ARGS
            value: --no-supervisor -q
          image: gcr.io/google-containers/fluentd-gcp:2.0.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
                  exit 1;
                fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
                  rm -rf /var/log/fluentd-buffers;
                  exit 1;
                fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
                  exit 1;
                fi;
            failureThreshold: 3
            initialDelaySeconds: 600
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: fluentd-gcp
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /host/lib
            name: libsystemddir
            readOnly: true
          - mountPath: /etc/fluent/config.d
            name: config-volume
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/fluentd-ds-ready: "true"
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: fluentd-gcp
        serviceAccountName: fluentd-gcp
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node.alpha.kubernetes.io/ismaster
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: varlibdockercontainers
        - hostPath:
            path: /usr/lib64
            type: ""
          name: libsystemddir
        - configMap:
            defaultMode: 420
            name: fluentd-gcp-config-v1.2.2
          name: config-volume
    templateGeneration: 2
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 2
    updatedNumberScheduled: 3
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-11-06T15:15:38Z
    generation: 3
    labels:
      chart: mma
    name: mma-api
    namespace: default
    resourceVersion: "7613970"
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/mma-api
    uid: 586e0dda-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 2
    selector:
      matchLabels:
        service: api
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: api
      spec:
        containers:
        - env:
          - name: PGRST_DB_URI
            value: postgres://postgres@localhost:5432/mma
          - name: PGRST_DB_SCHEMA
            value: mma
          - name: PGRST_DB_ANON_ROLE
            value: mmaweb
          image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regsecret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: 2017-11-08T23:37:42Z
      lastUpdateTime: 2017-11-08T23:37:42Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: 2017-11-06T15:15:38Z
    generation: 7
    labels:
      chart: mma
    name: mma-web
    namespace: default
    resourceVersion: "7613974"
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/mma-web
    uid: 586c926f-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: web
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: web
      spec:
        containers:
        - env:
          - name: TLS_EMAIL
            value: cooney.adrian@gmail.com
          - name: DOMAIN
            value: historyofmma.world
          - name: API_HOST
            value: mma-api.default
          image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: web
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-11-08T23:21:09Z
      lastUpdateTime: 2017-11-08T23:21:09Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"event-exporter","kubernetes.io/cluster-service":"true","version":"v0.1.7"},"name":"event-exporter-v0.1.7","namespace":"kube-system"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"k8s-app":"event-exporter","version":"v0.1.7"}},"spec":{"containers":[{"command":["/event-exporter"],"image":"gcr.io/google-containers/event-exporter:v0.1.7","name":"event-exporter"},{"command":["/monitor","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google-containers/prometheus-to-sd:v0.2.2","name":"prometheus-to-sd-exporter"}],"serviceAccountName":"event-exporter-sa","terminationGracePeriodSeconds":30,"volumes":[{"hostPath":{"path":"/etc/ssl/certs"},"name":"ssl-certs"}]}}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.1.7
    name: event-exporter-v0.1.7
    namespace: kube-system
    resourceVersion: "8874827"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/event-exporter-v0.1.7
    uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: event-exporter
        version: v0.1.7
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:33Z
      lastUpdateTime: 2017-10-30T21:50:33Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2017-10-30T21:50:00Z
      lastUpdateTime: 2018-01-14T19:21:01Z
      message: ReplicaSet "event-exporter-v0.1.7-5c4d9556cf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"heapster","kubernetes.io/cluster-service":"true","version":"v1.4.3"},"name":"heapster-v1.4.3","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"heapster","version":"v1.4.3"}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"heapster","version":"v1.4.3"}},"spec":{"containers":[{"command":["/heapster","--source=kubernetes.summary_api:''"],"image":"gcr.io/google_containers/heapster-amd64:v1.4.3","livenessProbe":{"httpGet":{"path":"/healthz","port":8082,"scheme":"HTTP"},"initialDelaySeconds":180,"timeoutSeconds":5},"name":"heapster"},{"command":["/pod_nanny","--cpu=80m","--extra-cpu=0.5m","--memory=140Mi","--extra-memory=4Mi","--threshold=5","--deployment=heapster-v1.4.3","--container=heapster","--poll-period=300000","--estimator=exponential"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google_containers/addon-resizer:1.7","name":"heapster-nanny","resources":{"limits":{"cpu":"50m","memory":"92960Ki"},"requests":{"cpu":"50m","memory":"92960Ki"}}}],"serviceAccountName":"heapster","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: heapster
      kubernetes.io/cluster-service: "true"
      version: v1.4.3
    name: heapster-v1.4.3
    namespace: kube-system
    resourceVersion: "7613969"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/heapster-v1.4.3
    uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: heapster
        version: v1.4.3
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:58Z
      lastUpdateTime: 2017-10-30T21:49:58Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"kube-dns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"strategy":{"rollingUpdate":{"maxSurge":"10%","maxUnavailable":0}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kube-dns"}},"spec":{"containers":[{"args":["--domain=cluster.local.","--dns-port=10053","--config-dir=/kube-dns-config","--v=2"],"env":[{"name":"PROMETHEUS_PORT","value":"10055"}],"image":"gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/kubedns","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"kubedns","ports":[{"containerPort":10053,"name":"dns-local","protocol":"UDP"},{"containerPort":10053,"name":"dns-tcp-local","protocol":"TCP"},{"containerPort":10055,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readiness","port":8081,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":5},"resources":{"limits":{"memory":"170Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"volumeMounts":[{"mountPath":"/kube-dns-config","name":"kube-dns-config"}]},{"args":["-v=2","-logtostderr","-configDir=/etc/k8s/dns/dnsmasq-nanny","-restartDnsmasq=true","--","-k","--cache-size=1000","--log-facility=-","--server=/cluster.local/127.0.0.1#10053","--server=/in-addr.arpa/127.0.0.1#10053","--server=/ip6.arpa/127.0.0.1#10053"],"image":"gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/dnsmasq","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"dnsmasq","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"}],"resources":{"requests":{"cpu":"150m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/etc/k8s/dns/dnsmasq-nanny","name":"kube-dns-config"}]},{"args":["--v=2","--logtostderr","--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A","--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A"],"image":"gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/metrics","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"sidecar","ports":[{"containerPort":10054,"name":"metrics","protocol":"TCP"}],"resources":{"requests":{"cpu":"10m","memory":"20Mi"}}}],"dnsPolicy":"Default","serviceAccountName":"kube-dns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"configMap":{"name":"kube-dns","optional":true},"name":"kube-dns-config"}]}}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "496"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/kube-dns
    uid: 46bfc918-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          - containerPort: 10055
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --logtostderr
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
          image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:38Z
      lastUpdateTime: 2017-10-30T21:50:38Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns-autoscaler","kubernetes.io/cluster-service":"true"},"name":"kube-dns-autoscaler","namespace":"kube-system"},"spec":{"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kube-dns-autoscaler"}},"spec":{"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=kube-dns-autoscaler","--target=Deployment/kube-dns","--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}","--logtostderr=true","--v=2"],"image":"gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2","name":"autoscaler","resources":{"requests":{"cpu":"20m","memory":"10Mi"}}}],"serviceAccountName":"kube-dns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "407"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/kube-dns-autoscaler
    uid: 470c443c-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true}}
          - --logtostderr=true
          - --v=2
          image: gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:00Z
      lastUpdateTime: 2017-10-30T21:50:00Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/cluster-service":"true"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates"],"image":"gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"serviceAccountName":"kubernetes-dashboard","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "8874852"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
    uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:59Z
      lastUpdateTime: 2017-10-30T21:49:59Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2018-01-14T19:20:56Z
      lastUpdateTime: 2018-01-14T19:21:10Z
      message: ReplicaSet "kubernetes-dashboard-768854d6dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"glbc","kubernetes.io/cluster-service":"true","kubernetes.io/name":"GLBC"},"name":"l7-default-backend","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"glbc"}},"template":{"metadata":{"labels":{"k8s-app":"glbc","name":"glbc"}},"spec":{"containers":[{"image":"gcr.io/google_containers/defaultbackend:1.3","livenessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":5},"name":"default-http-backend","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"10m","memory":"20Mi"},"requests":{"cpu":"10m","memory":"20Mi"}}}]}}}}
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "469"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/l7-default-backend
    uid: 45fce31e-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        containers:
        - image: gcr.io/google_containers/defaultbackend:1.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:58Z
      lastUpdateTime: 2017-10-30T21:49:58Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-11-06T15:15:20Z
    generation: 1
    labels:
      app: helm
      name: tiller
    name: tiller-deploy
    namespace: kube-system
    resourceVersion: "783407"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/tiller-deploy
    uid: 4df910a2-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: helm
        name: tiller
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: helm
          name: tiller
      spec:
        containers:
        - env:
          - name: TILLER_NAMESPACE
            value: kube-system
          image: gcr.io/kubernetes-helm/tiller:v2.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: tiller
          ports:
          - containerPort: 44134
            name: tiller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-11-06T15:15:21Z
      lastUpdateTime: 2017-11-06T15:15:21Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-11-06T23:27:38Z
    generation: 2
    labels:
      pod-template-hash: "1632800477"
      service: api
    name: mma-api-5b76d448cc
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mma-api
      uid: 586e0dda-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "7613967"
    selfLink: /apis/extensions/v1beta1/namespaces/default/replicasets/mma-api-5b76d448cc
    uid: 13ccff62-c34a-11e7-a8b9-42010a8001cc
  spec:
    replicas: 2
    selector:
      matchLabels:
        pod-template-hash: "1632800477"
        service: api
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: "1632800477"
          service: api
      spec:
        containers:
        - env:
          - name: PGRST_DB_URI
            value: postgres://postgres@localhost:5432/mma
          - name: PGRST_DB_SCHEMA
            value: mma
          - name: PGRST_DB_ANON_ROLE
            value: mmaweb
          image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regsecret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: 2017-11-06T23:27:38Z
    generation: 3
    labels:
      pod-template-hash: "4202246728"
      service: web
    name: mma-web-864668bc6d
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mma-web
      uid: 586c926f-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "7613972"
    selfLink: /apis/extensions/v1beta1/namespaces/default/replicasets/mma-web-864668bc6d
    uid: 13c9cd81-c34a-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: "4202246728"
        service: web
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: "4202246728"
          service: web
      spec:
        containers:
        - env:
          - name: TLS_EMAIL
            value: cooney.adrian@gmail.com
          - name: DOMAIN
            value: historyofmma.world
          - name: API_HOST
            value: mma-api.default
          image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: web
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2018-01-14T19:20:57Z
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: "1708511279"
      version: v0.1.7
    name: event-exporter-v0.1.7-5c4d9556cf
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-v0.1.7
      uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874821"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/event-exporter-v0.1.7-5c4d9556cf
    uid: 0c0c6b66-f960-11e7-ad17-42010a8000b3
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: "1708511279"
        version: v0.1.7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: "1708511279"
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      k8s-app: event-exporter
      pod-template-hash: "4219992438"
      version: v0.1.7
    name: event-exporter-v0.1.7-865fff687d
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-v0.1.7
      uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874826"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/event-exporter-v0.1.7-865fff687d
    uid: 472be043-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: "4219992438"
        version: v0.1.7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: "4219992438"
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --component=event_exporter
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --whitelisted-metrics=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-10-30T21:51:04Z
    generation: 1
    labels:
      k8s-app: heapster
      pod-template-hash: "2525520612"
      version: v1.4.3
    name: heapster-v1.4.3-6969964b56
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "7613964"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/heapster-v1.4.3-6969964b56
    uid: 6d78cd97-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "2525520612"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "2525520612"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 2
    labels:
      k8s-app: heapster
      pod-template-hash: "3776832706"
      version: v1.4.3
    name: heapster-v1.4.3-7ccbd76c4b
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "490"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/heapster-v1.4.3-7ccbd76c4b
    uid: 463e03b5-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "3776832706"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "3776832706"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2017-10-30T21:50:37Z
    generation: 2
    labels:
      k8s-app: heapster
      pod-template-hash: "867146213"
      version: v1.4.3
    name: heapster-v1.4.3-dbc58b657
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "551"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/heapster-v1.4.3-dbc58b657
    uid: 5d13b9fa-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "867146213"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "867146213"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: "3345330137"
    name: kube-dns-778977457c
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 46bfc918-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "494"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/kube-dns-778977457c
    uid: 46c1051b-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: "3345330137"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: "3345330137"
      spec:
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          - containerPort: 10055
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --logtostderr
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
          image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: "3860376563"
    name: kube-dns-autoscaler-7db47cb9b7
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: 470c443c-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "406"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/kube-dns-autoscaler-7db47cb9b7
    uid: 470d0718-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: "3860376563"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: "3860376563"
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true}}
          - --logtostderr=true
          - --v=2
          image: gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2018-01-14T19:20:56Z
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: "3244108287"
    name: kubernetes-dashboard-768854d6dc
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874851"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/kubernetes-dashboard-768854d6dc
    uid: 0b7f253e-f960-11e7-ad17-42010a8000b3
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: "3244108287"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: "3244108287"
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: "3272355337"
    name: kubernetes-dashboard-76c679977c
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874784"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/kubernetes-dashboard-76c679977c
    uid: 4667ba37-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: "3272355337"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: "3272355337"
      spec:
        containers:
        - image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: "2053678608"
    name: l7-default-backend-6497bcdb4d
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 45fce31e-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "467"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/l7-default-backend-6497bcdb4d
    uid: 45ff4714-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: "2053678608"
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: "2053678608"
      spec:
        containers:
        - image: gcr.io/google_containers/defaultbackend:1.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-11-06T15:15:20Z
    generation: 1
    labels:
      app: helm
      name: tiller
      pod-template-hash: "1258759368"
    name: tiller-deploy-569dc9f7bd
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tiller-deploy
      uid: 4df910a2-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "783406"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/tiller-deploy-569dc9f7bd
    uid: 4e053e30-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: helm
        name: tiller
        pod-template-hash: "1258759368"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: helm
          name: tiller
          pod-template-hash: "1258759368"
      spec:
        containers:
        - env:
          - name: TILLER_NAMESPACE
            value: kube-system
          image: gcr.io/kubernetes-helm/tiller:v2.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: tiller
          ports:
          - containerPort: 44134
            name: tiller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-11-06T15:15:38Z
    generation: 3
    labels:
      chart: mma
    name: mma-api
    namespace: default
    resourceVersion: "7613970"
    selfLink: /apis/apps/v1beta1/namespaces/default/deployments/mma-api
    uid: 586e0dda-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 2
    selector:
      matchLabels:
        service: api
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: api
      spec:
        containers:
        - env:
          - name: PGRST_DB_URI
            value: postgres://postgres@localhost:5432/mma
          - name: PGRST_DB_SCHEMA
            value: mma
          - name: PGRST_DB_ANON_ROLE
            value: mmaweb
          image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regsecret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: 2017-11-08T23:37:42Z
      lastUpdateTime: 2017-11-08T23:37:42Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: 2017-11-06T15:15:38Z
    generation: 7
    labels:
      chart: mma
    name: mma-web
    namespace: default
    resourceVersion: "7613974"
    selfLink: /apis/apps/v1beta1/namespaces/default/deployments/mma-web
    uid: 586c926f-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: web
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: web
      spec:
        containers:
        - env:
          - name: TLS_EMAIL
            value: cooney.adrian@gmail.com
          - name: DOMAIN
            value: historyofmma.world
          - name: API_HOST
            value: mma-api.default
          image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: web
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-11-08T23:21:09Z
      lastUpdateTime: 2017-11-08T23:21:09Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"event-exporter","kubernetes.io/cluster-service":"true","version":"v0.1.7"},"name":"event-exporter-v0.1.7","namespace":"kube-system"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"k8s-app":"event-exporter","version":"v0.1.7"}},"spec":{"containers":[{"command":["/event-exporter"],"image":"gcr.io/google-containers/event-exporter:v0.1.7","name":"event-exporter"},{"command":["/monitor","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google-containers/prometheus-to-sd:v0.2.2","name":"prometheus-to-sd-exporter"}],"serviceAccountName":"event-exporter-sa","terminationGracePeriodSeconds":30,"volumes":[{"hostPath":{"path":"/etc/ssl/certs"},"name":"ssl-certs"}]}}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.1.7
    name: event-exporter-v0.1.7
    namespace: kube-system
    resourceVersion: "8874827"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/event-exporter-v0.1.7
    uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: event-exporter
        version: v0.1.7
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:33Z
      lastUpdateTime: 2017-10-30T21:50:33Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2017-10-30T21:50:00Z
      lastUpdateTime: 2018-01-14T19:21:01Z
      message: ReplicaSet "event-exporter-v0.1.7-5c4d9556cf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"heapster","kubernetes.io/cluster-service":"true","version":"v1.4.3"},"name":"heapster-v1.4.3","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"heapster","version":"v1.4.3"}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"heapster","version":"v1.4.3"}},"spec":{"containers":[{"command":["/heapster","--source=kubernetes.summary_api:''"],"image":"gcr.io/google_containers/heapster-amd64:v1.4.3","livenessProbe":{"httpGet":{"path":"/healthz","port":8082,"scheme":"HTTP"},"initialDelaySeconds":180,"timeoutSeconds":5},"name":"heapster"},{"command":["/pod_nanny","--cpu=80m","--extra-cpu=0.5m","--memory=140Mi","--extra-memory=4Mi","--threshold=5","--deployment=heapster-v1.4.3","--container=heapster","--poll-period=300000","--estimator=exponential"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google_containers/addon-resizer:1.7","name":"heapster-nanny","resources":{"limits":{"cpu":"50m","memory":"92960Ki"},"requests":{"cpu":"50m","memory":"92960Ki"}}}],"serviceAccountName":"heapster","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: heapster
      kubernetes.io/cluster-service: "true"
      version: v1.4.3
    name: heapster-v1.4.3
    namespace: kube-system
    resourceVersion: "7613969"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/heapster-v1.4.3
    uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: heapster
        version: v1.4.3
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:58Z
      lastUpdateTime: 2017-10-30T21:49:58Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"kube-dns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"strategy":{"rollingUpdate":{"maxSurge":"10%","maxUnavailable":0}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kube-dns"}},"spec":{"containers":[{"args":["--domain=cluster.local.","--dns-port=10053","--config-dir=/kube-dns-config","--v=2"],"env":[{"name":"PROMETHEUS_PORT","value":"10055"}],"image":"gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/kubedns","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"kubedns","ports":[{"containerPort":10053,"name":"dns-local","protocol":"UDP"},{"containerPort":10053,"name":"dns-tcp-local","protocol":"TCP"},{"containerPort":10055,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readiness","port":8081,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":5},"resources":{"limits":{"memory":"170Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"volumeMounts":[{"mountPath":"/kube-dns-config","name":"kube-dns-config"}]},{"args":["-v=2","-logtostderr","-configDir=/etc/k8s/dns/dnsmasq-nanny","-restartDnsmasq=true","--","-k","--cache-size=1000","--log-facility=-","--server=/cluster.local/127.0.0.1#10053","--server=/in-addr.arpa/127.0.0.1#10053","--server=/ip6.arpa/127.0.0.1#10053"],"image":"gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/dnsmasq","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"dnsmasq","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"}],"resources":{"requests":{"cpu":"150m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/etc/k8s/dns/dnsmasq-nanny","name":"kube-dns-config"}]},{"args":["--v=2","--logtostderr","--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A","--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A"],"image":"gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/metrics","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"sidecar","ports":[{"containerPort":10054,"name":"metrics","protocol":"TCP"}],"resources":{"requests":{"cpu":"10m","memory":"20Mi"}}}],"dnsPolicy":"Default","serviceAccountName":"kube-dns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"configMap":{"name":"kube-dns","optional":true},"name":"kube-dns-config"}]}}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "496"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/kube-dns
    uid: 46bfc918-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          - containerPort: 10055
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --logtostderr
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
          image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:38Z
      lastUpdateTime: 2017-10-30T21:50:38Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns-autoscaler","kubernetes.io/cluster-service":"true"},"name":"kube-dns-autoscaler","namespace":"kube-system"},"spec":{"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kube-dns-autoscaler"}},"spec":{"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=kube-dns-autoscaler","--target=Deployment/kube-dns","--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}","--logtostderr=true","--v=2"],"image":"gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2","name":"autoscaler","resources":{"requests":{"cpu":"20m","memory":"10Mi"}}}],"serviceAccountName":"kube-dns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "407"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/kube-dns-autoscaler
    uid: 470c443c-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true}}
          - --logtostderr=true
          - --v=2
          image: gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:50:00Z
      lastUpdateTime: 2017-10-30T21:50:00Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/cluster-service":"true"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates"],"image":"gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"serviceAccountName":"kubernetes-dashboard","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "8874852"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
    uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:59Z
      lastUpdateTime: 2017-10-30T21:49:59Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2018-01-14T19:20:56Z
      lastUpdateTime: 2018-01-14T19:21:10Z
      message: ReplicaSet "kubernetes-dashboard-768854d6dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"glbc","kubernetes.io/cluster-service":"true","kubernetes.io/name":"GLBC"},"name":"l7-default-backend","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"glbc"}},"template":{"metadata":{"labels":{"k8s-app":"glbc","name":"glbc"}},"spec":{"containers":[{"image":"gcr.io/google_containers/defaultbackend:1.3","livenessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":5},"name":"default-http-backend","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"10m","memory":"20Mi"},"requests":{"cpu":"10m","memory":"20Mi"}}}]}}}}
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "469"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/l7-default-backend
    uid: 45fce31e-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        containers:
        - image: gcr.io/google_containers/defaultbackend:1.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-10-30T21:49:58Z
      lastUpdateTime: 2017-10-30T21:49:58Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-11-06T15:15:20Z
    generation: 1
    labels:
      app: helm
      name: tiller
    name: tiller-deploy
    namespace: kube-system
    resourceVersion: "783407"
    selfLink: /apis/apps/v1beta1/namespaces/kube-system/deployments/tiller-deploy
    uid: 4df910a2-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: helm
        name: tiller
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: helm
          name: tiller
      spec:
        containers:
        - env:
          - name: TILLER_NAMESPACE
            value: kube-system
          image: gcr.io/kubernetes-helm/tiller:v2.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: tiller
          ports:
          - containerPort: 44134
            name: tiller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2017-11-06T15:15:21Z
      lastUpdateTime: 2017-11-06T15:15:21Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta2
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"fluentd-gcp","kubernetes.io/cluster-service":"true","version":"v2.0.9"},"name":"fluentd-gcp-v2.0.9","namespace":"kube-system"},"spec":{"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":""},"labels":{"k8s-app":"fluentd-gcp","kubernetes.io/cluster-service":"true","version":"v2.0.9"}},"spec":{"containers":[{"env":[{"name":"FLUENTD_ARGS","value":"--no-supervisor -q"}],"image":"gcr.io/google-containers/fluentd-gcp:2.0.9","livenessProbe":{"exec":{"command":["/bin/sh","-c","LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then\n  exit 1;\nfi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r \"s/Modify: (.*)/\\1/\"`; LAST_MODIFIED_TIMESTAMP=`date -d \"$LAST_MODIFIED_DATE\" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then\n  rm -rf /var/log/fluentd-buffers;\n  exit 1;\nfi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then\n  exit 1;\nfi;\n"]},"initialDelaySeconds":600,"periodSeconds":60},"name":"fluentd-gcp","resources":{"limits":{"memory":"300Mi"},"requests":{"cpu":"100m","memory":"200Mi"}},"volumeMounts":[{"mountPath":"/var/log","name":"varlog"},{"mountPath":"/var/lib/docker/containers","name":"varlibdockercontainers","readOnly":true},{"mountPath":"/host/lib","name":"libsystemddir","readOnly":true},{"mountPath":"/etc/fluent/config.d","name":"config-volume"}]},{"command":["/monitor","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/google-containers/prometheus-to-sd:v0.2.2","name":"prometheus-to-sd-exporter"}],"dnsPolicy":"Default","nodeSelector":{"beta.kubernetes.io/fluentd-ds-ready":"true"},"serviceAccountName":"fluentd-gcp","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","key":"node.alpha.kubernetes.io/ismaster"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/log"},"name":"varlog"},{"hostPath":{"path":"/var/lib/docker/containers"},"name":"varlibdockercontainers"},{"hostPath":{"path":"/usr/lib64"},"name":"libsystemddir"},{"configMap":{"name":"fluentd-gcp-config-v1.2.2"},"name":"config-volume"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      version: v2.0.9
    name: fluentd-gcp-v2.0.9
    namespace: kube-system
    resourceVersion: "8875152"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/daemonsets/fluentd-gcp-v2.0.9
    uid: 474786fc-bdbc-11e7-a6d6-42010a8001ed
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: fluentd-gcp
        kubernetes.io/cluster-service: "true"
        version: v2.0.9
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: fluentd-gcp
          kubernetes.io/cluster-service: "true"
          version: v2.0.9
      spec:
        containers:
        - env:
          - name: FLUENTD_ARGS
            value: --no-supervisor -q
          image: gcr.io/google-containers/fluentd-gcp:2.0.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
                  exit 1;
                fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
                  rm -rf /var/log/fluentd-buffers;
                  exit 1;
                fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
                  exit 1;
                fi;
            failureThreshold: 3
            initialDelaySeconds: 600
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: fluentd-gcp
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /host/lib
            name: libsystemddir
            readOnly: true
          - mountPath: /etc/fluent/config.d
            name: config-volume
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/fluentd-ds-ready: "true"
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: fluentd-gcp
        serviceAccountName: fluentd-gcp
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node.alpha.kubernetes.io/ismaster
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: varlibdockercontainers
        - hostPath:
            path: /usr/lib64
            type: ""
          name: libsystemddir
        - configMap:
            defaultMode: 420
            name: fluentd-gcp-config-v1.2.2
          name: config-volume
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 2
    updatedNumberScheduled: 3
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-11-06T23:27:38Z
    generation: 2
    labels:
      pod-template-hash: "1632800477"
      service: api
    name: mma-api-5b76d448cc
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mma-api
      uid: 586e0dda-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "7613967"
    selfLink: /apis/apps/v1beta2/namespaces/default/replicasets/mma-api-5b76d448cc
    uid: 13ccff62-c34a-11e7-a8b9-42010a8001cc
  spec:
    replicas: 2
    selector:
      matchLabels:
        pod-template-hash: "1632800477"
        service: api
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: "1632800477"
          service: api
      spec:
        containers:
        - env:
          - name: PGRST_DB_URI
            value: postgres://postgres@localhost:5432/mma
          - name: PGRST_DB_SCHEMA
            value: mma
          - name: PGRST_DB_ANON_ROLE
            value: mmaweb
          image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: db
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regsecret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: 2017-11-06T23:27:38Z
    generation: 3
    labels:
      pod-template-hash: "4202246728"
      service: web
    name: mma-web-864668bc6d
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mma-web
      uid: 586c926f-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "7613972"
    selfLink: /apis/apps/v1beta2/namespaces/default/replicasets/mma-web-864668bc6d
    uid: 13c9cd81-c34a-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: "4202246728"
        service: web
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: "4202246728"
          service: web
      spec:
        containers:
        - env:
          - name: TLS_EMAIL
            value: cooney.adrian@gmail.com
          - name: DOMAIN
            value: historyofmma.world
          - name: API_HOST
            value: mma-api.default
          image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
          imagePullPolicy: Always
          name: web
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2018-01-14T19:20:57Z
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: "1708511279"
      version: v0.1.7
    name: event-exporter-v0.1.7-5c4d9556cf
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-v0.1.7
      uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874821"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/event-exporter-v0.1.7-5c4d9556cf
    uid: 0c0c6b66-f960-11e7-ad17-42010a8000b3
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: "1708511279"
        version: v0.1.7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: "1708511279"
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 2
    labels:
      k8s-app: event-exporter
      pod-template-hash: "4219992438"
      version: v0.1.7
    name: event-exporter-v0.1.7-865fff687d
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-v0.1.7
      uid: 472b01f8-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874826"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/event-exporter-v0.1.7-865fff687d
    uid: 472be043-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: "4219992438"
        version: v0.1.7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: "4219992438"
          version: v0.1.7
      spec:
        containers:
        - command:
          - /event-exporter
          image: gcr.io/google-containers/event-exporter:v0.1.7
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --component=event_exporter
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --whitelisted-metrics=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          image: gcr.io/google-containers/prometheus-to-sd:v0.2.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: 2017-10-30T21:51:04Z
    generation: 1
    labels:
      k8s-app: heapster
      pod-template-hash: "2525520612"
      version: v1.4.3
    name: heapster-v1.4.3-6969964b56
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "7613964"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/heapster-v1.4.3-6969964b56
    uid: 6d78cd97-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "2525520612"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "2525520612"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 2
    labels:
      k8s-app: heapster
      pod-template-hash: "3776832706"
      version: v1.4.3
    name: heapster-v1.4.3-7ccbd76c4b
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "490"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/heapster-v1.4.3-7ccbd76c4b
    uid: 463e03b5-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "3776832706"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "3776832706"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2017-10-30T21:50:37Z
    generation: 2
    labels:
      k8s-app: heapster
      pod-template-hash: "867146213"
      version: v1.4.3
    name: heapster-v1.4.3-dbc58b657
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: heapster-v1.4.3
      uid: 463d43f1-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "551"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/heapster-v1.4.3-dbc58b657
    uid: 5d13b9fa-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: heapster
        pod-template-hash: "867146213"
        version: v1.4.3
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: heapster
          pod-template-hash: "867146213"
          version: v1.4.3
      spec:
        containers:
        - command:
          - /heapster
          - --source=kubernetes.summary_api:''
          image: gcr.io/google_containers/heapster-amd64:v1.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: heapster
          resources:
            limits:
              cpu: 88m
              memory: 204Mi
            requests:
              cpu: 88m
              memory: 204Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /pod_nanny
          - --cpu=80m
          - --extra-cpu=0.5m
          - --memory=140Mi
          - --extra-memory=4Mi
          - --threshold=5
          - --deployment=heapster-v1.4.3
          - --container=heapster
          - --poll-period=300000
          - --estimator=exponential
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gcr.io/google_containers/addon-resizer:1.7
          imagePullPolicy: IfNotPresent
          name: heapster-nanny
          resources:
            limits:
              cpu: 50m
              memory: 92960Ki
            requests:
              cpu: 50m
              memory: 92960Ki
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: heapster
        serviceAccountName: heapster
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: "3345330137"
    name: kube-dns-778977457c
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 46bfc918-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "494"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/kube-dns-778977457c
    uid: 46c1051b-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: "3345330137"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: "3345330137"
      spec:
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          - containerPort: 10055
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --logtostderr
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
          image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:50:00Z
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: "3860376563"
    name: kube-dns-autoscaler-7db47cb9b7
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: 470c443c-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "406"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/kube-dns-autoscaler-7db47cb9b7
    uid: 470d0718-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: "3860376563"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: "3860376563"
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true}}
          - --logtostderr=true
          - --v=2
          image: gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2018-01-14T19:20:56Z
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: "3244108287"
    name: kubernetes-dashboard-768854d6dc
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874851"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/kubernetes-dashboard-768854d6dc
    uid: 0b7f253e-f960-11e7-ad17-42010a8000b3
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: "3244108287"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: "3244108287"
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:59Z
    generation: 2
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: "3272355337"
    name: kubernetes-dashboard-76c679977c
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 46671c1b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874784"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/kubernetes-dashboard-76c679977c
    uid: 4667ba37-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: "3272355337"
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: "3272355337"
      spec:
        containers:
        - image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-10-30T21:49:58Z
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: "2053678608"
    name: l7-default-backend-6497bcdb4d
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 45fce31e-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "467"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/l7-default-backend-6497bcdb4d
    uid: 45ff4714-bdbc-11e7-a6d6-42010a8001ed
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: "2053678608"
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: "2053678608"
      spec:
        containers:
        - image: gcr.io/google_containers/defaultbackend:1.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2017-11-06T15:15:20Z
    generation: 1
    labels:
      app: helm
      name: tiller
      pod-template-hash: "1258759368"
    name: tiller-deploy-569dc9f7bd
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tiller-deploy
      uid: 4df910a2-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "783406"
    selfLink: /apis/apps/v1beta2/namespaces/kube-system/replicasets/tiller-deploy-569dc9f7bd
    uid: 4e053e30-c305-11e7-a8b9-42010a8001cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: helm
        name: tiller
        pod-template-hash: "1258759368"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: helm
          name: tiller
          pod-template-hash: "1258759368"
      spec:
        containers:
        - env:
          - name: TILLER_NAMESPACE
            value: kube-system
          image: gcr.io/kubernetes-helm/tiller:v2.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: tiller
          ports:
          - containerPort: 44134
            name: tiller
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2017-11-08T23:34:28Z","reason":"ReadyForNewScale","message":"the
        last scale time was sufficiently old as to warrant a new scale"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2018-01-04T00:14:43Z","reason":"ValidMetricFound","message":"the
        HPA was able to succesfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2017-11-08T23:41:19Z","reason":"TooFewReplicas","message":"the
        desired replica count was less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"1m"}}]'
    creationTimestamp: 2017-11-06T16:30:04Z
    name: mma-api
    namespace: default
    resourceVersion: "9227050"
    selfLink: /apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/mma-api
    uid: bea8302e-c30f-11e7-a8b9-42010a8001cc
  spec:
    maxReplicas: 5
    minReplicas: 2
    scaleTargetRef:
      apiVersion: extensions/v1beta1
      kind: Deployment
      name: mma-api
    targetCPUUtilizationPercentage: 80
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 2
    desiredReplicas: 2
    lastScaleTime: 2017-11-08T23:29:27Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"mma-api-5b76d448cc","uid":"13ccff62-c34a-11e7-a8b9-42010a8001cc","apiVersion":"extensions","resourceVersion":"1066334"}}
    creationTimestamp: 2017-11-08T23:38:54Z
    generateName: mma-api-5b76d448cc-
    labels:
      pod-template-hash: "1632800477"
      service: api
    name: mma-api-5b76d448cc-kc8bk
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mma-api-5b76d448cc
      uid: 13ccff62-c34a-11e7-a8b9-42010a8001cc
    resourceVersion: "7613966"
    selfLink: /api/v1/namespaces/default/pods/mma-api-5b76d448cc-kc8bk
    uid: fb551c34-c4dd-11e7-a8b9-42010a8001cc
  spec:
    containers:
    - env:
      - name: PGRST_DB_URI
        value: postgres://postgres@localhost:5432/mma
      - name: PGRST_DB_SCHEMA
        value: mma
      - name: PGRST_DB_ANON_ROLE
        value: mmaweb
      image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
      imagePullPolicy: Always
      name: api
      ports:
      - containerPort: 3000
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xdhf6
        readOnly: true
    - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
      imagePullPolicy: Always
      name: db
      ports:
      - containerPort: 5432
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xdhf6
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: regsecret
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-xdhf6
      secret:
        defaultMode: 420
        secretName: default-token-xdhf6
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:38:54Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:39:07Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:38:54Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://66bc2b4a2180382890aa82ed8ea2432eca6ce2e80ac516996c97b437b3f83536
      image: adriancooney/mma-api:8d5aebc49f8a7706339f30cbec0ced6ed6105f22
      imageID: docker-pullable://adriancooney/mma-api@sha256:f008363534907fdb0827c825952e6481fc05cc58d95c6c29da707762da33e357
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-11-08T23:38:55Z
    - containerID: docker://4e1818fa27feeb652f6392817c02293f92ba9cefa457aa35f8991a0c9f396d78
      image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
      imageID: docker-pullable://adriancooney/mma-db@sha256:15965ca623fe87d03c6b15787cd8ea4dea22e38b556fb42bff4631af341ba3f7
      lastState: {}
      name: db
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-11-08T23:39:06Z
    hostIP: 10.128.0.3
    phase: Running
    podIP: 10.20.0.16
    qosClass: Guaranteed
    startTime: 2017-11-08T23:38:54Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"mma-api-5b76d448cc","uid":"13ccff62-c34a-11e7-a8b9-42010a8001cc","apiVersion":"extensions","resourceVersion":"1066016"}}
    creationTimestamp: 2017-11-08T23:34:26Z
    generateName: mma-api-5b76d448cc-
    labels:
      pod-template-hash: "1632800477"
      service: api
    name: mma-api-5b76d448cc-z66vq
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mma-api-5b76d448cc
      uid: 13ccff62-c34a-11e7-a8b9-42010a8001cc
    resourceVersion: "1066333"
    selfLink: /api/v1/namespaces/default/pods/mma-api-5b76d448cc-z66vq
    uid: 5b948b52-c4dd-11e7-a8b9-42010a8001cc
  spec:
    containers:
    - env:
      - name: PGRST_DB_URI
        value: postgres://postgres@localhost:5432/mma
      - name: PGRST_DB_SCHEMA
        value: mma
      - name: PGRST_DB_ANON_ROLE
        value: mmaweb
      image: adriancooney/mma-api:dd1478213697df4db9e74019ba11423ea14f9b12
      imagePullPolicy: Always
      name: api
      ports:
      - containerPort: 3000
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xdhf6
        readOnly: true
    - image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
      imagePullPolicy: Always
      name: db
      ports:
      - containerPort: 5432
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xdhf6
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: regsecret
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-xdhf6
      secret:
        defaultMode: 420
        secretName: default-token-xdhf6
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:34:26Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:37:42Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:34:26Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://edf59f89d4b9e941d84bcd41c3ef5754918485ffec2bca7cd4cc41b1aa0db911
      image: adriancooney/mma-api:8d5aebc49f8a7706339f30cbec0ced6ed6105f22
      imageID: docker-pullable://adriancooney/mma-api@sha256:f008363534907fdb0827c825952e6481fc05cc58d95c6c29da707762da33e357
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-11-08T23:37:34Z
    - containerID: docker://a4817849c752864cae287a8198b7c93a6e7bda761db30a70df4183e820dada7e
      image: adriancooney/mma-db:dd1478213697df4db9e74019ba11423ea14f9b12
      imageID: docker-pullable://adriancooney/mma-db@sha256:15965ca623fe87d03c6b15787cd8ea4dea22e38b556fb42bff4631af341ba3f7
      lastState: {}
      name: db
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-11-08T23:37:41Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.20
    qosClass: Guaranteed
    startTime: 2017-11-08T23:34:26Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"mma-web-864668bc6d","uid":"13c9cd81-c34a-11e7-a8b9-42010a8001cc","apiVersion":"extensions","resourceVersion":"1065410"}}
    creationTimestamp: 2017-11-08T23:47:42Z
    generateName: mma-web-864668bc6d-
    labels:
      pod-template-hash: "4202246728"
      service: web
    name: mma-web-864668bc6d-vw8kd
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mma-web-864668bc6d
      uid: 13c9cd81-c34a-11e7-a8b9-42010a8001cc
    resourceVersion: "7613971"
    selfLink: /api/v1/namespaces/default/pods/mma-web-864668bc6d-vw8kd
    uid: 3647395a-c4df-11e7-a8b9-42010a8001cc
  spec:
    containers:
    - env:
      - name: TLS_EMAIL
        value: cooney.adrian@gmail.com
      - name: DOMAIN
        value: historyofmma.world
      - name: API_HOST
        value: mma-api.default
      image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
      imagePullPolicy: Always
      name: web
      ports:
      - containerPort: 443
        protocol: TCP
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xdhf6
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-xdhf6
      secret:
        defaultMode: 420
        secretName: default-token-xdhf6
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:47:42Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-11-13T22:28:25Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-11-08T23:47:42Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8b0d267222105259f3fe22648df906f7fd432efdead2666c822062bf6e4a23a5
      image: adriancooney/mma-web:dd1478213697df4db9e74019ba11423ea14f9b12
      imageID: docker-pullable://adriancooney/mma-web@sha256:466ac829f1e654b4aac077d9e5ba78951fd78303aef22ae4fafcff76fa1d758f
      lastState:
        terminated:
          containerID: docker://f92323f77690f37d73173f4f915e091ad5328809cac9737f9b5738eda5945705
          exitCode: 1
          finishedAt: 2017-11-13T22:23:22Z
          reason: Error
          startedAt: 2017-11-13T22:23:12Z
      name: web
      ready: true
      restartCount: 1378
      state:
        running:
          startedAt: 2017-11-13T22:28:24Z
    hostIP: 10.128.0.3
    phase: Running
    podIP: 10.20.0.17
    qosClass: Guaranteed
    startTime: 2017-11-08T23:47:42Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"event-exporter-v0.1.7-5c4d9556cf","uid":"0c0c6b66-f960-11e7-ad17-42010a8000b3","apiVersion":"extensions","resourceVersion":"8874790"}}
    creationTimestamp: 2018-01-14T19:20:57Z
    generateName: event-exporter-v0.1.7-5c4d9556cf-
    labels:
      k8s-app: event-exporter
      pod-template-hash: "1708511279"
      version: v0.1.7
    name: event-exporter-v0.1.7-5c4d9556cf-4lhsg
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-exporter-v0.1.7-5c4d9556cf
      uid: 0c0c6b66-f960-11e7-ad17-42010a8000b3
    resourceVersion: "8874820"
    selfLink: /api/v1/namespaces/kube-system/pods/event-exporter-v0.1.7-5c4d9556cf-4lhsg
    uid: 0c0e0ba3-f960-11e7-ad17-42010a8000b3
  spec:
    containers:
    - command:
      - /event-exporter
      image: gcr.io/google-containers/event-exporter:v0.1.7
      imagePullPolicy: IfNotPresent
      name: event-exporter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: event-exporter-sa-token-2xnqk
        readOnly: true
    - command:
      - /monitor
      - --stackdriver-prefix=container.googleapis.com/internal/addons
      - --api-override=https://monitoring.googleapis.com/
      - --source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: event-exporter-sa-token-2xnqk
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: event-exporter-sa
    serviceAccountName: event-exporter-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: ssl-certs
    - name: event-exporter-sa-token-2xnqk
      secret:
        defaultMode: 420
        secretName: event-exporter-sa-token-2xnqk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:20:57Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:01Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:20:57Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2861c3fa6f715f45b4fb664c0898dd66b3ebe709ad8f6a789bcfd47352844a5c
      image: asia.gcr.io/google-containers/event-exporter:v0.1.7
      imageID: docker-pullable://asia.gcr.io/google-containers/event-exporter@sha256:0c86fa393401fe57843be1aa3180cd7fd339ef06fa18234ae5b139a85cfa55ec
      lastState: {}
      name: event-exporter
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:20:58Z
    - containerID: docker://01753e9373deac34c5ddb39d52573013969c783c9d3a843fe7e486bc80fa0a7c
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:5831390762c790b0375c202579fd41dd5f40c71950f7538adbe14b0c16f35d56
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:21:00Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.21
    qosClass: BestEffort
    startTime: 2018-01-14T19:20:57Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"DaemonSet","namespace":"kube-system","name":"fluentd-gcp-v2.0.9","uid":"474786fc-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"8875054"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2018-01-14T19:24:20Z
    generateName: fluentd-gcp-v2.0.9-
    labels:
      controller-revision-hash: "107478581"
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "2"
      version: v2.0.9
    name: fluentd-gcp-v2.0.9-5ptkp
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentd-gcp-v2.0.9
      uid: 474786fc-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8875154"
    selfLink: /api/v1/namespaces/kube-system/pods/fluentd-gcp-v2.0.9-5ptkp
    uid: 854e0ed7-f960-11e7-ad17-42010a8000b3
  spec:
    containers:
    - env:
      - name: FLUENTD_ARGS
        value: --no-supervisor -q
      image: gcr.io/google-containers/fluentd-gcp:2.0.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - |
            LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
              exit 1;
            fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
              rm -rf /var/log/fluentd-buffers;
              exit 1;
            fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
              exit 1;
            fi;
        failureThreshold: 3
        initialDelaySeconds: 600
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: fluentd-gcp
      resources:
        limits:
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /host/lib
        name: libsystemddir
        readOnly: true
      - mountPath: /etc/fluent/config.d
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    - command:
      - /monitor
      - --stackdriver-prefix=container.googleapis.com/internal/addons
      - --api-override=https://monitoring.googleapis.com/
      - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    dnsPolicy: Default
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-05l3
    nodeSelector:
      beta.kubernetes.io/fluentd-ds-ready: "true"
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: fluentd-gcp
    serviceAccountName: fluentd-gcp
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.alpha.kubernetes.io/ismaster
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /usr/lib64
        type: ""
      name: libsystemddir
    - configMap:
        defaultMode: 420
        name: fluentd-gcp-config-v1.2.2
      name: config-volume
    - name: fluentd-gcp-token-j4vgs
      secret:
        defaultMode: 420
        secretName: fluentd-gcp-token-j4vgs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:24:20Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:24:23Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:24:23Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e83ac28a6c1d91568ede65fb54d0565ca7c79be09752b91a59ea2f45f0d7060b
      image: asia.gcr.io/google-containers/fluentd-gcp:2.0.9
      imageID: docker-pullable://asia.gcr.io/google-containers/fluentd-gcp@sha256:31a2043cc4dc93208c843cc44d1325f7ebf0d18a863bec738fe62b56965dbf62
      lastState: {}
      name: fluentd-gcp
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:24:21Z
    - containerID: docker://ee7cbe2dcf4ddf1e96d25ad49486bf49e4ce4c0851a86a0475d12fc9fe4e2a32
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:5831390762c790b0375c202579fd41dd5f40c71950f7538adbe14b0c16f35d56
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:24:23Z
    hostIP: 10.128.0.2
    phase: Running
    podIP: 10.20.2.18
    qosClass: Burstable
    startTime: 2018-01-14T19:24:20Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"DaemonSet","namespace":"kube-system","name":"fluentd-gcp-v2.0.9","uid":"474786fc-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"8874876"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2018-01-14T19:21:55Z
    generateName: fluentd-gcp-v2.0.9-
    labels:
      controller-revision-hash: "107478581"
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "2"
      version: v2.0.9
    name: fluentd-gcp-v2.0.9-ksl6r
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentd-gcp-v2.0.9
      uid: 474786fc-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8874930"
    selfLink: /api/v1/namespaces/kube-system/pods/fluentd-gcp-v2.0.9-ksl6r
    uid: 2eda2f5c-f960-11e7-ad17-42010a8000b3
  spec:
    containers:
    - env:
      - name: FLUENTD_ARGS
        value: --no-supervisor -q
      image: gcr.io/google-containers/fluentd-gcp:2.0.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - |
            LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
              exit 1;
            fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
              rm -rf /var/log/fluentd-buffers;
              exit 1;
            fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
              exit 1;
            fi;
        failureThreshold: 3
        initialDelaySeconds: 600
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: fluentd-gcp
      resources:
        limits:
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /host/lib
        name: libsystemddir
        readOnly: true
      - mountPath: /etc/fluent/config.d
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    - command:
      - /monitor
      - --stackdriver-prefix=container.googleapis.com/internal/addons
      - --api-override=https://monitoring.googleapis.com/
      - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    dnsPolicy: Default
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    nodeSelector:
      beta.kubernetes.io/fluentd-ds-ready: "true"
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: fluentd-gcp
    serviceAccountName: fluentd-gcp
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.alpha.kubernetes.io/ismaster
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /usr/lib64
        type: ""
      name: libsystemddir
    - configMap:
        defaultMode: 420
        name: fluentd-gcp-config-v1.2.2
      name: config-volume
    - name: fluentd-gcp-token-j4vgs
      secret:
        defaultMode: 420
        secretName: fluentd-gcp-token-j4vgs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:55Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:56Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:56Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://80fdd8a6241a815c9004ea2146c63e0a388b62c61c0e687e80b7091008602541
      image: asia.gcr.io/google-containers/fluentd-gcp:2.0.9
      imageID: docker-pullable://asia.gcr.io/google-containers/fluentd-gcp@sha256:31a2043cc4dc93208c843cc44d1325f7ebf0d18a863bec738fe62b56965dbf62
      lastState: {}
      name: fluentd-gcp
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:21:56Z
    - containerID: docker://ac041bd44ea3d216014c1537c111936aad16780b10b65867cead2c8df6a06709
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:5831390762c790b0375c202579fd41dd5f40c71950f7538adbe14b0c16f35d56
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:21:56Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.22
    qosClass: Burstable
    startTime: 2018-01-14T19:21:55Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"DaemonSet","namespace":"kube-system","name":"fluentd-gcp-v2.0.9","uid":"474786fc-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"8874973"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2018-01-14T19:22:45Z
    generateName: fluentd-gcp-v2.0.9-
    labels:
      controller-revision-hash: "107478581"
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "2"
      version: v2.0.9
    name: fluentd-gcp-v2.0.9-xx84j
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentd-gcp-v2.0.9
      uid: 474786fc-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "8875012"
    selfLink: /api/v1/namespaces/kube-system/pods/fluentd-gcp-v2.0.9-xx84j
    uid: 4ca68269-f960-11e7-ad17-42010a8000b3
  spec:
    containers:
    - env:
      - name: FLUENTD_ARGS
        value: --no-supervisor -q
      image: gcr.io/google-containers/fluentd-gcp:2.0.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - |
            LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
              exit 1;
            fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
              rm -rf /var/log/fluentd-buffers;
              exit 1;
            fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
              exit 1;
            fi;
        failureThreshold: 3
        initialDelaySeconds: 600
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: fluentd-gcp
      resources:
        limits:
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /host/lib
        name: libsystemddir
        readOnly: true
      - mountPath: /etc/fluent/config.d
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    - command:
      - /monitor
      - --stackdriver-prefix=container.googleapis.com/internal/addons
      - --api-override=https://monitoring.googleapis.com/
      - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: fluentd-gcp-token-j4vgs
        readOnly: true
    dnsPolicy: Default
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    nodeSelector:
      beta.kubernetes.io/fluentd-ds-ready: "true"
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: fluentd-gcp
    serviceAccountName: fluentd-gcp
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.alpha.kubernetes.io/ismaster
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /usr/lib64
        type: ""
      name: libsystemddir
    - configMap:
        defaultMode: 420
        name: fluentd-gcp-config-v1.2.2
      name: config-volume
    - name: fluentd-gcp-token-j4vgs
      secret:
        defaultMode: 420
        secretName: fluentd-gcp-token-j4vgs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:22:45Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:22:47Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:22:47Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4c274604b6fd3144c97fc5293e2f253bd8097b18eeaaac07d13e1c1746720d03
      image: asia.gcr.io/google-containers/fluentd-gcp:2.0.9
      imageID: docker-pullable://asia.gcr.io/google-containers/fluentd-gcp@sha256:31a2043cc4dc93208c843cc44d1325f7ebf0d18a863bec738fe62b56965dbf62
      lastState: {}
      name: fluentd-gcp
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:22:46Z
    - containerID: docker://e6517ceb7f70da5edd5ba39baf00357857b7b980c6736e795d2327eb635cac7b
      image: gcr.io/google-containers/prometheus-to-sd:v0.2.2
      imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:5831390762c790b0375c202579fd41dd5f40c71950f7538adbe14b0c16f35d56
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:22:47Z
    hostIP: 10.128.0.3
    phase: Running
    podIP: 10.20.0.19
    qosClass: Burstable
    startTime: 2018-01-14T19:22:45Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"heapster-v1.4.3-6969964b56","uid":"6d78cd97-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"539"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:51:04Z
    generateName: heapster-v1.4.3-6969964b56-
    labels:
      k8s-app: heapster
      pod-template-hash: "2525520612"
      version: v1.4.3
    name: heapster-v1.4.3-6969964b56-mhgl6
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: heapster-v1.4.3-6969964b56
      uid: 6d78cd97-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "7613963"
    selfLink: /api/v1/namespaces/kube-system/pods/heapster-v1.4.3-6969964b56-mhgl6
    uid: 6d7ac230-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - command:
      - /heapster
      - --source=kubernetes.summary_api:''
      image: gcr.io/google_containers/heapster-amd64:v1.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 180
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: heapster
      resources:
        limits:
          cpu: 88m
          memory: 204Mi
        requests:
          cpu: 88m
          memory: 204Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: heapster-token-k9v2w
        readOnly: true
    - command:
      - /pod_nanny
      - --cpu=80m
      - --extra-cpu=0.5m
      - --memory=140Mi
      - --extra-memory=4Mi
      - --threshold=5
      - --deployment=heapster-v1.4.3
      - --container=heapster
      - --poll-period=300000
      - --estimator=exponential
      env:
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: gcr.io/google_containers/addon-resizer:1.7
      imagePullPolicy: IfNotPresent
      name: heapster-nanny
      resources:
        limits:
          cpu: 50m
          memory: 92960Ki
        requests:
          cpu: 50m
          memory: 92960Ki
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: heapster-token-k9v2w
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: heapster
    serviceAccountName: heapster
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: heapster-token-k9v2w
      secret:
        defaultMode: 420
        secretName: heapster-token-k9v2w
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:51:04Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:51:05Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:51:04Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://78b3d6ecb8a5de0e9e674af77fc9f3553802b79fdac42d62e5d78200fb6e204c
      image: asia.gcr.io/google_containers/heapster-amd64:v1.4.3
      imageID: docker-pullable://asia.gcr.io/google_containers/heapster-amd64@sha256:8e04183590f937c274fb95c1397ea0c6b919645c765862e2cc9cb80f097a8fb4
      lastState: {}
      name: heapster
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:51:05Z
    - containerID: docker://218f4f3eacfe322e7d82a2896ee3ad3fadf12a5c577ad8560301a7fdad31ad20
      image: asia.gcr.io/google_containers/addon-resizer:1.7
      imageID: docker-pullable://asia.gcr.io/google_containers/addon-resizer@sha256:dcec9a5c2e20b8df19f3e9eeb87d9054a9e94e71479b935d5cfdbede9ce15895
      lastState: {}
      name: heapster-nanny
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:51:05Z
    hostIP: 10.128.0.3
    phase: Running
    podIP: 10.20.0.3
    qosClass: Guaranteed
    startTime: 2017-10-30T21:51:04Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"kube-dns-778977457c","uid":"46c1051b-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"285"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:00Z
    generateName: kube-dns-778977457c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: "3345330137"
    name: kube-dns-778977457c-npgrh
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-778977457c
      uid: 46c1051b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "493"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-778977457c-npgrh
    uid: 46f6f2c5-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      - containerPort: 10055
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    - args:
      - --v=2
      - --logtostderr
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
      image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    dnsPolicy: Default
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - name: kube-dns-token-nvkw5
      secret:
        defaultMode: 420
        secretName: kube-dns-token-nvkw5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:31Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:38Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:31Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cecdf8f14304b85afccc06934778dc1ddafec9d03d0f8276b3cf34913d0b7c1c
      image: asia.gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64@sha256:46b933bb70270c8a02fa6b6f87d440f6f1fce1a5a2a719e164f83f7b109f7544
      lastState: {}
      name: dnsmasq
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:32Z
    - containerID: docker://aebcb9be5328f8558c52cef64247614a7acde7a2ecedc55d43a74cc50b91df5e
      image: asia.gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-kube-dns-amd64@sha256:1a3fc069de481ae690188f6f1ba4664b5cc7760af37120f70c86505c79eea61d
      lastState: {}
      name: kubedns
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:32Z
    - containerID: docker://5d25abe39186a13ac5f147b1856755543556db748c0fab3942df533ab8eefe74
      image: asia.gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-sidecar-amd64@sha256:9aab42bf6a2a068b797fe7d91a5d8d915b10dbbc3d6f2b10492848debfba6044
      lastState: {}
      name: sidecar
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:33Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.5
    qosClass: Burstable
    startTime: 2017-10-30T21:50:31Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"kube-dns-778977457c","uid":"46c1051b-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"410"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:19Z
    generateName: kube-dns-778977457c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: "3345330137"
    name: kube-dns-778977457c-v66k2
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-778977457c
      uid: 46c1051b-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "428"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-778977457c-v66k2
    uid: 5271f069-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      - containerPort: 10055
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    - args:
      - --v=2
      - --logtostderr
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
      image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-token-nvkw5
        readOnly: true
    dnsPolicy: Default
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-05l3
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - name: kube-dns-token-nvkw5
      secret:
        defaultMode: 420
        secretName: kube-dns-token-nvkw5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:19Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:25Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:19Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bfc92fcc63292d4d5a8bac0df8b3dc10a02c574e16d01c7c1a1e2bbf56e9ea67
      image: asia.gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64@sha256:46b933bb70270c8a02fa6b6f87d440f6f1fce1a5a2a719e164f83f7b109f7544
      lastState: {}
      name: dnsmasq
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:20Z
    - containerID: docker://02dda52bfe9f41463a1e70510c67ac17900ba82b6e385476246d2c65bf178341
      image: asia.gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-kube-dns-amd64@sha256:1a3fc069de481ae690188f6f1ba4664b5cc7760af37120f70c86505c79eea61d
      lastState: {}
      name: kubedns
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:20Z
    - containerID: docker://1de0d3f71b71fa21f44369f5dad50a250878fcb686b9171cff6bf29d46fde460
      image: asia.gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5
      imageID: docker-pullable://asia.gcr.io/google_containers/k8s-dns-sidecar-amd64@sha256:9aab42bf6a2a068b797fe7d91a5d8d915b10dbbc3d6f2b10492848debfba6044
      lastState: {}
      name: sidecar
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:21Z
    hostIP: 10.128.0.2
    phase: Running
    podIP: 10.20.2.2
    qosClass: Burstable
    startTime: 2017-10-30T21:50:19Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"kube-dns-autoscaler-7db47cb9b7","uid":"470d0718-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"303"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:02Z
    generateName: kube-dns-autoscaler-7db47cb9b7-
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: "3860376563"
    name: kube-dns-autoscaler-7db47cb9b7-8v2l5
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-autoscaler-7db47cb9b7
      uid: 470d0718-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "405"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-autoscaler-7db47cb9b7-8v2l5
    uid: 489b7376-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=kube-dns-autoscaler
      - --target=Deployment/kube-dns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true}}
      - --logtostderr=true
      - --v=2
      image: gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-dns-autoscaler-token-lf2kh
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-dns-autoscaler
    serviceAccountName: kube-dns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-dns-autoscaler-token-lf2kh
      secret:
        defaultMode: 420
        secretName: kube-dns-autoscaler-token-lf2kh
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:17Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:18Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:17Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5c1cd85c2a1f6c749cd67a794c9d6e2f31b6bbab842438079aa8dc33f117855f
      image: asia.gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.1.2-r2
      imageID: docker-pullable://asia.gcr.io/google_containers/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:18Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.2
    qosClass: Burstable
    startTime: 2017-10-30T21:50:17Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.mirror: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.seen: 2017-10-30T21:49:55.492471462Z
      kubernetes.io/config.source: file
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:00Z
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-05l3
    namespace: kube-system
    resourceVersion: "361"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-05l3
    uid: 47543c15-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - echo -998 > /proc/$$$/oom_score_adj && kube-proxy --master=https://35.194.4.130
        --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.20.0.0/14 --resource-container=""
        --v=2 --feature-gates=ExperimentalCriticalPodAnnotation=true --iptables-sync-period=1m
        --iptables-min-sync-period=10s 1>>/var/log/kube-proxy.log 2>&1
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    hostNetwork: true
    initContainers:
    - command:
      - /bin/touch
      - /run/xtables.lock
      image: busybox
      imagePullPolicy: Always
      name: touch-lock
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-05l3
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run
        type: ""
      name: run
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:00Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://130f4538a6cc5801bc0429b634433360ee2f76bf8398fc228d83b306619b8108
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imageID: docker://sha256:52f95b490a36fef32805fa3a62e44fc81ae6c8d1165a894435b7893313aabb17
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:02Z
    hostIP: 10.128.0.2
    initContainerStatuses:
    - containerID: docker://a14f97eccd580351cae851662e20513728f2e9218ae78b1bc655986095f90072
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:030fcb92e1487b18c974784dcc110a93147c9fc402188370fbfd17efabffc6af
      lastState: {}
      name: touch-lock
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://a14f97eccd580351cae851662e20513728f2e9218ae78b1bc655986095f90072
          exitCode: 0
          finishedAt: 2017-10-30T21:50:01Z
          reason: Completed
          startedAt: 2017-10-30T21:50:01Z
    phase: Running
    podIP: 10.128.0.2
    qosClass: Burstable
    startTime: 2017-10-30T21:50:00Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.mirror: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.seen: 2017-10-30T21:49:55.455510105Z
      kubernetes.io/config.source: file
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:00Z
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-51ss
    namespace: kube-system
    resourceVersion: "7613960"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-51ss
    uid: 474cb0e3-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - echo -998 > /proc/$$$/oom_score_adj && kube-proxy --master=https://35.194.4.130
        --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.20.0.0/14 --resource-container=""
        --v=2 --feature-gates=ExperimentalCriticalPodAnnotation=true --iptables-sync-period=1m
        --iptables-min-sync-period=10s 1>>/var/log/kube-proxy.log 2>&1
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    hostNetwork: true
    initContainers:
    - command:
      - /bin/touch
      - /run/xtables.lock
      image: busybox
      imagePullPolicy: Always
      name: touch-lock
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run
        type: ""
      name: run
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:00Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0e7636b097a656364a8247a5b7854c7215cd1f6647517c185d66b0eeddeaf04b
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imageID: docker://sha256:52f95b490a36fef32805fa3a62e44fc81ae6c8d1165a894435b7893313aabb17
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:02Z
    hostIP: 10.128.0.3
    initContainerStatuses:
    - containerID: docker://d7257ef9c612e97b13ace2a543e6c079a9ef03d027414572c3c3495401dd3754
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:030fcb92e1487b18c974784dcc110a93147c9fc402188370fbfd17efabffc6af
      lastState: {}
      name: touch-lock
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://d7257ef9c612e97b13ace2a543e6c079a9ef03d027414572c3c3495401dd3754
          exitCode: 0
          finishedAt: 2017-10-30T21:50:01Z
          reason: Completed
          startedAt: 2017-10-30T21:50:01Z
    phase: Running
    podIP: 10.128.0.3
    qosClass: Burstable
    startTime: 2017-10-30T21:50:00Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.mirror: a02f56d4a5ad2c3a18eb35b785dd5257
      kubernetes.io/config.seen: 2017-10-30T21:49:55.480537801Z
      kubernetes.io/config.source: file
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2017-10-30T21:50:00Z
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    namespace: kube-system
    resourceVersion: "353"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    uid: 47515c55-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - echo -998 > /proc/$$$/oom_score_adj && kube-proxy --master=https://35.194.4.130
        --kubeconfig=/var/lib/kube-proxy/kubeconfig --cluster-cidr=10.20.0.0/14 --resource-container=""
        --v=2 --feature-gates=ExperimentalCriticalPodAnnotation=true --iptables-sync-period=1m
        --iptables-min-sync-period=10s 1>>/var/log/kube-proxy.log 2>&1
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    hostNetwork: true
    initContainers:
    - command:
      - /bin/touch
      - /run/xtables.lock
      image: busybox
      imagePullPolicy: Always
      name: touch-lock
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run
        type: ""
      name: run
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:00Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b73883e4d263101f543b600737ac2d474a6da4cc252023353834b55df818ac75
      image: gcr.io/google_containers/kube-proxy:v1.8.1-gke.0
      imageID: docker://sha256:52f95b490a36fef32805fa3a62e44fc81ae6c8d1165a894435b7893313aabb17
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:02Z
    hostIP: 10.128.0.4
    initContainerStatuses:
    - containerID: docker://442c410c8b2a6116be385960a353cb6ffebff3822d5edc3bbdf0572ee96e0e6f
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:030fcb92e1487b18c974784dcc110a93147c9fc402188370fbfd17efabffc6af
      lastState: {}
      name: touch-lock
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://442c410c8b2a6116be385960a353cb6ffebff3822d5edc3bbdf0572ee96e0e6f
          exitCode: 0
          finishedAt: 2017-10-30T21:50:01Z
          reason: Completed
          startedAt: 2017-10-30T21:50:01Z
    phase: Running
    podIP: 10.128.0.4
    qosClass: Burstable
    startTime: 2017-10-30T21:50:00Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"kubernetes-dashboard-768854d6dc","uid":"0b7f253e-f960-11e7-ad17-42010a8000b3","apiVersion":"extensions","resourceVersion":"8874780"}}
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: 2018-01-14T19:21:01Z
    generateName: kubernetes-dashboard-768854d6dc-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: "3244108287"
    name: kubernetes-dashboard-768854d6dc-dvdts
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-768854d6dc
      uid: 0b7f253e-f960-11e7-ad17-42010a8000b3
    resourceVersion: "8874849"
    selfLink: /api/v1/namespaces/kube-system/pods/kubernetes-dashboard-768854d6dc-dvdts
    uid: 0e9cd01c-f960-11e7-ad17-42010a8000b3
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-kn5rg
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-51ss
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-kn5rg
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-kn5rg
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:10Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-01-14T19:21:01Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c005e32ab59f5a2876a944345ecea93276486ab935a31d6808277b1b439d664f
      image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0
      imageID: docker-pullable://gcr.io/google_containers/kubernetes-dashboard-amd64@sha256:71a0de5c6a21cb0c2fbcad71a4fef47acd3e61cd78109822d35e1742f9d8140d
      lastState: {}
      name: kubernetes-dashboard
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-01-14T19:21:10Z
    hostIP: 10.128.0.3
    phase: Running
    podIP: 10.20.0.18
    qosClass: Burstable
    startTime: 2018-01-14T19:21:01Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"l7-default-backend-6497bcdb4d","uid":"45ff4714-bdbc-11e7-a6d6-42010a8001ed","apiVersion":"extensions","resourceVersion":"236"}}
    creationTimestamp: 2017-10-30T21:49:58Z
    generateName: l7-default-backend-6497bcdb4d-
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: "2053678608"
    name: l7-default-backend-6497bcdb4d-tp4sd
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: l7-default-backend-6497bcdb4d
      uid: 45ff4714-bdbc-11e7-a6d6-42010a8001ed
    resourceVersion: "466"
    selfLink: /api/v1/namespaces/kube-system/pods/l7-default-backend-6497bcdb4d-tp4sd
    uid: 46016239-bdbc-11e7-a6d6-42010a8001ed
  spec:
    containers:
    - image: gcr.io/google_containers/defaultbackend:1.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 10m
          memory: 20Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-v82jc
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-v82jc
      secret:
        defaultMode: 420
        secretName: default-token-v82jc
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:29Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:35Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-10-30T21:50:29Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3a7fc1c617edb370e48e5a1d1015df4bb0816d5ec7078423e4695fe53473cb60
      image: asia.gcr.io/google_containers/defaultbackend:1.3
      imageID: docker-pullable://asia.gcr.io/google_containers/defaultbackend@sha256:fb91f9395ddf44df1ca3adf68b25dcbc269e5d08ba14a40de9abdedafacf93d4
      lastState: {}
      name: default-http-backend
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-10-30T21:50:33Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.3
    qosClass: Guaranteed
    startTime: 2017-10-30T21:50:29Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"kube-system","name":"tiller-deploy-569dc9f7bd","uid":"4e053e30-c305-11e7-a8b9-42010a8001cc","apiVersion":"extensions","resourceVersion":"783371"}}
    creationTimestamp: 2017-11-06T15:15:21Z
    generateName: tiller-deploy-569dc9f7bd-
    labels:
      app: helm
      name: tiller
      pod-template-hash: "1258759368"
    name: tiller-deploy-569dc9f7bd-dhsmd
    namespace: kube-system
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: tiller-deploy-569dc9f7bd
      uid: 4e053e30-c305-11e7-a8b9-42010a8001cc
    resourceVersion: "783404"
    selfLink: /api/v1/namespaces/kube-system/pods/tiller-deploy-569dc9f7bd-dhsmd
    uid: 4e2f34f6-c305-11e7-a8b9-42010a8001cc
  spec:
    containers:
    - env:
      - name: TILLER_NAMESPACE
        value: kube-system
      image: gcr.io/kubernetes-helm/tiller:v2.4.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /liveness
          port: 44135
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: tiller
      ports:
      - containerPort: 44134
        name: tiller
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 44135
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-v82jc
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: gke-mma-cluster-1-default-pool-a339cc8e-s8vx
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-v82jc
      secret:
        defaultMode: 420
        secretName: default-token-v82jc
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2017-11-06T15:15:21Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2017-11-06T15:15:35Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2017-11-06T15:15:21Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f3799c95cf5887360fe2e280f313e0021338b58330797e2c1b7054bda3898a64
      image: gcr.io/kubernetes-helm/tiller:v2.4.1
      imageID: docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:cbe82d1748af14359cd6d2d07efd32007f69be23b8833d095995d0ea0dceb40a
      lastState: {}
      name: tiller
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2017-11-06T15:15:25Z
    hostIP: 10.128.0.4
    phase: Running
    podIP: 10.20.1.7
    qosClass: BestEffort
    startTime: 2017-11-06T15:15:21Z
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2017-10-30T21:49:36Z
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "29"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: 38aad6f9-bdbc-11e7-a6d6-42010a8001ed
  spec:
    clusterIP: 10.23.240.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2017-11-06T15:15:38Z
    labels:
      service: api
    name: mma-api
    namespace: default
    resourceVersion: "783415"
    selfLink: /api/v1/namespaces/default/services/mma-api
    uid: 5857716d-c305-11e7-a8b9-42010a8001cc
  spec:
    clusterIP: 10.23.246.250
    ports:
    - name: api
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      service: api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2017-11-06T15:15:38Z
    labels:
      service: web
    name: mma-web
    namespace: default
    resourceVersion: "816395"
    selfLink: /api/v1/namespaces/default/services/mma-web
    uid: 58518984-c305-11e7-a8b9-42010a8001cc
  spec:
    clusterIP: 10.23.255.85
    externalTrafficPolicy: Cluster
    ports:
    - name: https
      nodePort: 30962
      port: 443
      protocol: TCP
      targetPort: 443
    - name: http
      nodePort: 31332
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      service: web
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 35.202.201.0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"glbc","kubernetes.io/cluster-service":"true","kubernetes.io/name":"GLBCDefaultBackend"},"name":"default-http-backend","namespace":"kube-system"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080}],"selector":{"k8s-app":"glbc"},"type":"NodePort"}}
    creationTimestamp: 2017-10-30T21:49:58Z
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "247"
    selfLink: /api/v1/namespaces/kube-system/services/default-http-backend
    uid: 4611bfe2-bdbc-11e7-a6d6-42010a8001ed
  spec:
    clusterIP: 10.23.243.83
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31302
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Heapster"},"name":"heapster","namespace":"kube-system"},"spec":{"ports":[{"port":80,"targetPort":8082}],"selector":{"k8s-app":"heapster"}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Heapster
    name: heapster
    namespace: kube-system
    resourceVersion: "267"
    selfLink: /api/v1/namespaces/kube-system/services/heapster
    uid: 465fa7d5-bdbc-11e7-a6d6-42010a8001ed
  spec:
    clusterIP: 10.23.240.116
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8082
    selector:
      k8s-app: heapster
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"KubeDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.23.240.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "292"
    selfLink: /api/v1/namespaces/kube-system/services/kube-dns
    uid: 46f09b3a-bdbc-11e7-a6d6-42010a8001ed
  spec:
    clusterIP: 10.23.240.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/cluster-service":"true"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: 2017-10-30T21:49:59Z
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "8874787"
    selfLink: /api/v1/namespaces/kube-system/services/kubernetes-dashboard
    uid: 468f437f-bdbc-11e7-a6d6-42010a8001ed
  spec:
    clusterIP: 10.23.251.205
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2017-11-06T15:15:21Z
    labels:
      app: helm
      name: tiller
    name: tiller-deploy
    namespace: kube-system
    resourceVersion: "783380"
    selfLink: /api/v1/namespaces/kube-system/services/tiller-deploy
    uid: 4e4b9b18-c305-11e7-a8b9-42010a8001cc
  spec:
    clusterIP: 10.23.248.177
    ports:
    - name: tiller
      port: 44134
      protocol: TCP
      targetPort: tiller
    selector:
      app: helm
      name: tiller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
